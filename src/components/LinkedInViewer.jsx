// import { useState, useRef, useEffect } from "react";

// const LinkedInViewer = ({ blogContent = "" }) => {
//     const [text, setText] = useState(blogContent);
//     const textareaRef = useRef(null);

//     // Auto-resize textarea
//     useEffect(() => {
//         const ta = textareaRef.current;
//         if (ta) {
//             ta.style.height = "auto";
//             ta.style.height = ta.scrollHeight + "px";
//         }
//     }, [text]);

//     const applyStyle = (styleType) => {
//         const ta = textareaRef.current;
//         if (!ta) return;

//         const start = ta.selectionStart;
//         const end = ta.selectionEnd;

//         if (start === end) {
//             // If no selection, insert placeholder and select it
//             const placeholder = "your text here";
//             const before = text.slice(0, start);
//             const after = text.slice(end);
//             const newText = before + placeholder + after;
//             setText(newText);

//             setTimeout(() => {
//                 ta.setSelectionRange(start, start + placeholder.length);
//                 ta.focus();
//             }, 0);
//             return;
//         }

//         const before = text.slice(0, start);
//         const selected = text.slice(start, end);
//         const after = text.slice(end);

//         let styled = selected;

//         switch (styleType) {
//             case "bold":
//                 styled = convertToBold(selected);
//                 break;
//             case "italic":
//                 styled = convertToItalic(selected);
//                 break;
//             case "underline":
//                 styled = convertToUnderline(selected);
//                 break;
//             case "strikethrough":
//                 styled = convertToStrikethrough(selected);
//                 break;
//             case "bullet":
//                 styled = `‚Ä¢ ${selected}`;
//                 break;
//             case "number":
//                 styled = `1. ${selected}`;
//                 break;
//             default:
//                 break;
//         }

//         const newText = before + styled + after;
//         setText(newText);

//         // Restore selection around styled text
//         setTimeout(() => {
//             ta.setSelectionRange(start, start + styled.length);
//             ta.focus();
//         }, 0);
//     };

//     // Unicode conversion functions
//     const convertToBold = (text) => {
//         const boldMap = {
//             'a': 'ùóÆ', 'b': 'ùóØ', 'c': 'ùó∞', 'd': 'ùó±', 'e': 'ùó≤', 'f': 'ùó≥', 'g': 'ùó¥', 'h': 'ùóµ', 'i': 'ùó∂', 'j': 'ùó∑',
//             'k': 'ùó∏', 'l': 'ùóπ', 'm': 'ùó∫', 'n': 'ùóª', 'o': 'ùóº', 'p': 'ùóΩ', 'q': 'ùóæ', 'r': 'ùóø', 's': 'ùòÄ', 't': 'ùòÅ',
//             'u': 'ùòÇ', 'v': 'ùòÉ', 'w': 'ùòÑ', 'x': 'ùòÖ', 'y': 'ùòÜ', 'z': 'ùòá',
//             'A': 'ùóî', 'B': 'ùóï', 'C': 'ùóñ', 'D': 'ùóó', 'E': 'ùóò', 'F': 'ùóô', 'G': 'ùóö', 'H': 'ùóõ', 'I': 'ùóú', 'J': 'ùóù',
//             'K': 'ùóû', 'L': 'ùóü', 'M': 'ùó†', 'N': 'ùó°', 'O': 'ùó¢', 'P': 'ùó£', 'Q': 'ùó§', 'R': 'ùó•', 'S': 'ùó¶', 'T': 'ùóß',
//             'U': 'ùó®', 'V': 'ùó©', 'W': 'ùó™', 'X': 'ùó´', 'Y': 'ùó¨', 'Z': 'ùó≠',
//             '0': 'ùü¨', '1': 'ùü≠', '2': 'ùüÆ', '3': 'ùüØ', '4': 'ùü∞', '5': 'ùü±', '6': 'ùü≤', '7': 'ùü≥', '8': 'ùü¥', '9': 'ùüµ'
//         };

//         return text.split('').map(char => boldMap[char] || char).join('');
//     };

//     const convertToItalic = (text) => {
//         const italicMap = {
//             'a': 'ùò¢', 'b': 'ùò£', 'c': 'ùò§', 'd': 'ùò•', 'e': 'ùò¶', 'f': 'ùòß', 'g': 'ùò®', 'h': 'ùò©', 'i': 'ùò™', 'j': 'ùò´',
//             'k': 'ùò¨', 'l': 'ùò≠', 'm': 'ùòÆ', 'n': 'ùòØ', 'o': 'ùò∞', 'p': 'ùò±', 'q': 'ùò≤', 'r': 'ùò≥', 's': 'ùò¥', 't': 'ùòµ',
//             'u': 'ùò∂', 'v': 'ùò∑', 'w': 'ùò∏', 'x': 'ùòπ', 'y': 'ùò∫', 'z': 'ùòª',
//             'A': 'ùòà', 'B': 'ùòâ', 'C': 'ùòä', 'D': 'ùòã', 'E': 'ùòå', 'F': 'ùòç', 'G': 'ùòé', 'H': 'ùòè', 'I': 'ùòê', 'J': 'ùòë',
//             'K': 'ùòí', 'L': 'ùòì', 'M': 'ùòî', 'N': 'ùòï', 'O': 'ùòñ', 'P': 'ùòó', 'Q': 'ùòò', 'R': 'ùòô', 'S': 'ùòö', 'T': 'ùòõ',
//             'U': 'ùòú', 'V': 'ùòù', 'W': 'ùòû', 'X': 'ùòü', 'Y': 'ùò†', 'Z': 'ùò°'
//         };

//         return text.split('').map(char => italicMap[char] || char).join('');
//     };

//     const convertToUnderline = (text) => {
//         return text.split('').map(char => char + '\u0332').join('');
//     };

//     const convertToStrikethrough = (text) => {
//         return text.split('').map(char => char + '\u0336').join('');
//     };

//     const clearFormatting = () => {
//         // Combine all character maps for efficiency
//         const normalMap = {
//             // Bold characters
//             'ùóÆ': 'a', 'ùóØ': 'b', 'ùó∞': 'c', 'ùó±': 'd', 'ùó≤': 'e', 'ùó≥': 'f', 'ùó¥': 'g', 'ùóµ': 'h', 'ùó∂': 'i', 'ùó∑': 'j',
//             'ùó∏': 'k', 'ùóπ': 'l', 'ùó∫': 'm', 'ùóª': 'n', 'ùóº': 'o', 'ùóΩ': 'p', 'ùóæ': 'q', 'ùóø': 'r', 'ùòÄ': 's', 'ùòÅ': 't',
//             'ùòÇ': 'u', 'ùòÉ': 'v', 'ùòÑ': 'w', 'ùòÖ': 'x', 'ùòÜ': 'y', 'ùòá': 'z',
//             'ùóî': 'A', 'ùóï': 'B', 'ùóñ': 'C', 'ùóó': 'D', 'ùóò': 'E', 'ùóô': 'F', 'ùóö': 'G', 'ùóõ': 'H', 'ùóú': 'I', 'ùóù': 'J',
//             'ùóû': 'K', 'ùóü': 'L', 'ùó†': 'M', 'ùó°': 'N', 'ùó¢': 'O', 'ùó£': 'P', 'ùó§': 'Q', 'ùó•': 'R', 'ùó¶': 'S', 'ùóß': 'T',
//             'ùó®': 'U', 'ùó©': 'V', 'ùó™': 'W', 'ùó´': 'X', 'ùó¨': 'Y', 'ùó≠': 'Z',
//             'ùü¨': '0', 'ùü≠': '1', 'ùüÆ': '2', 'ùüØ': '3', 'ùü∞': '4', 'ùü±': '5', 'ùü≤': '6', 'ùü≥': '7', 'ùü¥': '8', 'ùüµ': '9',
//             // Italic characters
//             'ùò¢': 'a', 'ùò£': 'b', 'ùò§': 'c', 'ùò•': 'd', 'ùò¶': 'e', 'ùòß': 'f', 'ùò®': 'g', 'ùò©': 'h', 'ùò™': 'i', 'ùò´': 'j',
//             'ùò¨': 'k', 'ùò≠': 'l', 'ùòÆ': 'm', 'ùòØ': 'n', 'ùò∞': 'o', 'ùò±': 'p', 'ùò≤': 'q', 'ùò≥': 'r', 'ùò¥': 's', 'ùòµ': 't',
//             'ùò∂': 'u', 'ùò∑': 'v', 'ùò∏': 'w', 'ùòπ': 'x', 'ùò∫': 'y', 'ùòª': 'z',
//             'ùòà': 'A', 'ùòâ': 'B', 'ùòä': 'C', 'ùòã': 'D', 'ùòå': 'E', 'ùòç': 'F', 'ùòé': 'G', 'ùòè': 'H', 'ùòê': 'I', 'ùòë': 'J',
//             'ùòí': 'K', 'ùòì': 'L', 'ùòî': 'M', 'ùòï': 'N', 'ùòñ': 'O', 'ùòó': 'P', 'ùòò': 'Q', 'ùòô': 'R', 'ùòö': 'S', 'ùòõ': 'T',
//             'ùòú': 'U', 'ùòù': 'V', 'ùòû': 'W', 'ùòü': 'X', 'ùò†': 'Y', 'ùò°': 'Z'
//         };

//         const cleaned = text
//             .replace(/[\u0332\u0336]/g, '') // Remove combining characters
//             .split('')
//             .map(char => normalMap[char] || char)
//             .join('');

//         setText(cleaned);
//     };

//     const handleCopy = () => {
//         navigator.clipboard.writeText(text);
//         alert("Copied to clipboard!");
//     };

//     const characterCount = text.length;

//     return (
//         <div className="space-y-4 p-4 max-w-2xl mx-auto">
//             <div className="flex flex-wrap gap-2">
//                 <button
//                     onClick={() => applyStyle("bold")}
//                     className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg border border-gray-300 font-semibold"
//                     title="Bold"
//                 >
//                     ùêÅ
//                 </button>
//                 <button
//                     onClick={() => applyStyle("italic")}
//                     className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg border border-gray-300 italic"
//                     title="Italic"
//                 >
//                     ùêº
//                 </button>
//                 <button
//                     onClick={() => applyStyle("underline")}
//                     className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg border border-gray-300 underline"
//                     title="Underline"
//                 >
//                     UÃ≤
//                 </button>
//                 <button
//                     onClick={() => applyStyle("strikethrough")}
//                     className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg border border-gray-300 line-through"
//                     title="Strikethrough"
//                 >
//                     SÃ∂
//                 </button>
//                 <button
//                     onClick={() => applyStyle("bullet")}
//                     className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg border border-gray-300"
//                     title="Bullet Point"
//                 >
//                     ‚Ä¢
//                 </button>
//                 <button
//                     onClick={() => applyStyle("number")}
//                     className="px-3 py-2 bg-gray-100 hover:bg-gray-200 rounded-lg border border-gray-300"
//                     title="Numbered List"
//                 >
//                     1.
//                 </button>
//                 <button
//                     onClick={clearFormatting}
//                     className="px-3 py-2 bg-red-100 hover:bg-red-200 rounded-lg border border-red-300"
//                     title="Clear Formatting"
//                 >
//                     Clear
//                 </button>
//                 <button
//                     onClick={handleCopy}
//                     className="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium"
//                 >
//                     Copy Text
//                 </button>
//             </div>

//             <div className="relative">
//                 <textarea
//                     ref={textareaRef}
//                     className="w-full p-4 border border-gray-300 rounded-lg resize-none min-h-[200px] focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
//                     value={text}
//                     onChange={(e) => setText(e.target.value)}
//                     placeholder="Start typing or paste your caption here..."
//                     style={{
//                         overflow: "hidden",
//                         overflowWrap: "break-word",
//                         resize: "none",
//                         fontFamily: "system-ui, -apple-system, sans-serif",
//                         lineHeight: "1.5"
//                     }}
//                 />
//                 <div className="absolute bottom-2 right-2 text-sm text-gray-500">
//                     {characterCount}/3000
//                 </div>
//             </div>

//             <div className="text-sm text-gray-600">
//                 <p><strong>Tip:</strong> Select text and click formatting buttons, or click buttons first to insert placeholder text.</p>
//                 <p><strong>Note:</strong> Uses Unicode characters for formatting that work on LinkedIn and other social platforms.</p>
//             </div>
//         </div>
//     );
// };

// export default LinkedInViewer;


import { useState } from "react";
import { Copy } from "lucide-react";

export default function LinkedInViewer({ linkedInVersion }) {
    const [copied, setCopied] = useState(false);

    if (!linkedInVersion) return null;

    const handleCopy = () => {
        navigator.clipboard.writeText(linkedInVersion);
        setCopied(true);
        setTimeout(() => setCopied(false), 1500);
    };

    return (
        <div className="mt-8 bg-white shadow-lg rounded-2xl p-6 border border-gray-200 transition-all duration-300 hover:shadow-xl">
            <div className="flex items-center justify-between mb-3">
                <h2 className="text-xl font-semibold text-blue-700 flex items-center gap-2">
                    <img
                        src="https://cdn-icons-png.flaticon.com/512/174/174857.png"
                        alt="LinkedIn"
                        className="w-5 h-5"
                    />
                    LinkedIn Optimized Version
                </h2>

                <button
                    onClick={handleCopy}
                    className={`flex items-center gap-2 px-3 py-1.5 rounded-lg text-sm font-medium transition ${copied
                        ? "bg-green-500 text-white"
                        : "bg-blue-600 hover:bg-blue-700 text-white"
                        }`}
                >
                    <Copy className="w-4 h-4" />
                    {copied ? "Copied!" : "Copy"}
                </button>
            </div>

            <div className="prose max-w-none text-gray-800 leading-relaxed whitespace-pre-wrap">
                {linkedInVersion}
            </div>
        </div>
    );
}
